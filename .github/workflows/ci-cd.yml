name: CI/CD Pipeline
on:
  push:
    branches: [ main ]

env:
  GCP_PROJECT: helical-loop-453001-c0
  GKE_CLUSTER: air-quality-cluster
  GKE_ZONE: europe-central2-a

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Authenticate with Google Cloud
      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT }}

      # Step 3: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Build and push Frontend
      - name: Build Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: |
            gcr.io/helical-loop-453001-c0/frontend:latest
            gcr.io/helical-loop-453001-c0/frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Step 5: Build and push Backend
      - name: Build Air Quality Service
        uses: docker/build-push-action@v4
        with:
          context: ./backend/air_quality_service
          push: true
          tags: |
            gcr.io/helical-loop-453001-c0/air-quality-service:latest
            gcr.io/helical-loop-453001-c0/air-quality-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Step 6: Configure Kubernetes
      - name: Configure GKE
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: air-quality-cluster
          location: europe-central2-a
          project_id: helical-loop-453001-c0

      # Step 7: Deploy to Kubernetes
      - name: Deploy
        run: |
          kubectl apply -f kubernetes/
          kubectl rollout status deployment/frontend-deployment
          kubectl rollout status deployment/air-quality-deployment
          echo "Deployment complete!"